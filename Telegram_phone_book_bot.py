import telebot
from random import*
import json
import requests
import sys
import os

API_TOKEN='YOUR_API'
bot = telebot.TeleBot(API_TOKEN)

phone_book_bot = {}
selected_contacts = []
current_contact = None

def load_contacts():
    if os.path.exists('phone_book_bot.json'):
        with open('phone_book_bot.json', 'r') as file:
            try:
                contacts_data = json.load(file)
                return contacts_data
            except json.JSONDecodeError:
                print("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ phone_book_bot.json")
    return {}

def save_contacts():
    with open('phone_book_bot.json', 'w') as file:
        json.dump(phone_book_bot, file, ensure_ascii=False, indent=4)


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id,greeting_message) 
greeting_message = (
    "–ü—Ä–∏–≤–µ—Ç üëã!\n\n"
    "‚òéÔ∏è –≠—Ç–æ —Ç–≤–æ–π –æ–Ω–ª–∞–π–Ω —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫\n\n"
    "‚û°Ô∏è –í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /menu, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Ç–≤–æ–µ–≥–æ –∫–∞—Ä–º–∞–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞\n\n"
)

@bot.message_handler(commands=['menu'])
def menu_message(message):
    bot.send_message(message.chat.id,menu_list_message)
menu_list_message = (
    "üìã –í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: \n\n"
    "/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç\n\n"
    "/menu - —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã\n\n"
    "/all_contacts - —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã\n\n"
    "/add_new_contact - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç\n\n"
    "/search_contact - –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø–æ –∏–º–µ–Ω–∏\n\n"
    "/delete - —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç\n\n"
    "/edit - –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç\n\n"
    "/add_number_to_existing_contact - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É"
)

@bot.message_handler(commands=['all_contacts'])
def show_all_phone_book_bot(message):
    if phone_book_bot:
        response = "–í–æ—Ç –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤üë®‚Äçüíº:\n\n"
        for contact_name, contact_data in phone_book_bot.items():
            surname = contact_data.get('surname', '–§–∞–º–∏–ª–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
            phone = contact_data.get('phone', '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω')
            phone_str = '\n'.join(phone)
            email = contact_data.get('email', '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
            contact_info = f"ü™™ –ò–º—è: {contact_name}\nü™™ –§–∞–º–∏–ª–∏—è: {surname}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone_str}\nüìß –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: {email}\n\n"
            response += contact_info
        bot.send_message(message.chat.id, response)
    else:
        bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –ø–æ–∫–∞ —á—Ç–æ –ø—É—Å—Ç!ü§∑‚Äç‚ôÄÔ∏è")

@bot.message_handler(commands=['add_new_contact'])
def add_new_contact_command(message):
    global current_contact
    current_contact = {}
    add_new_contact_reply_message = (
        "–û—Ç–ª–∏—á–Ω–æ!üéâ –†–∞–¥–∞, —á—Ç–æ —É —Ç–µ–±—è –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π –¥—Ä—É–≥ üëç\n\n"
        "‚úçÔ∏è –°–∫–æ—Ä–µ–µ –∑–∞–ø–∏—à–∏ –µ–≥–æ –≤ —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã!\n\n"
        "ü™™ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞:"
    )
    bot.send_message(message.chat.id, add_new_contact_reply_message)
    bot.register_next_step_handler(message, process_name_step)

def process_name_step(message):
    global current_contact
    contact_name = message.text
    if contact_name in phone_book_bot:
        bot.send_message(message.chat.id, "üö´ –ö–æ–Ω—Ç–∞–∫—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è:")
        bot.register_next_step_handler(message, process_name_step)
    else:
        current_contact['name'] = contact_name
        bot.send_message(message.chat.id, "ü™™ –í–≤–µ–¥–∏ —Ñ–∞–º–∏–ª–∏—é –∫–æ–Ω—Ç–∞–∫—Ç–∞:")
        bot.register_next_step_handler(message, process_surname_step)

def process_surname_step(message):
    global current_contact
    current_contact['surname'] = message.text
    bot.send_message(message.chat.id, "üìû –í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞:")
    bot.register_next_step_handler(message, process_phone_step)

def process_phone_step(message):
    global current_contact
    current_contact['phone'] = [message.text]
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('üìû –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É 'üìû –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞'):", reply_markup=markup)
    bot.register_next_step_handler(message, process_additional_phone_step)


def process_additional_phone_step(message):
    global current_contact
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('üìû –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
    
    if message.text.lower() == 'üìû –∑–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞':
        if current_contact['phone']:
            bot.send_message(message.chat.id, "üìû –í–≤–æ–¥ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω.")
            bot.send_message(message.chat.id, "üìß –í–≤–µ–¥–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É –∫–æ–Ω—Ç–∞–∫—Ç–∞:")
            bot.register_next_step_handler(message, process_email_step)
        else:
            bot.send_message(message.chat.id, "üìû –í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
            bot.register_next_step_handler(message, process_additional_phone_step)
    else:
        current_contact['phone'].append(message.text)
        bot.send_message(message.chat.id, "üìû –í–≤–µ–¥–∏ —Å–ª–µ–¥—É—é—â–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É 'üìû –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞'):", reply_markup=markup)
        bot.register_next_step_handler(message, process_additional_phone_step)

def process_email_step(message):
    global current_contact, phone_book_bot
    current_contact['email'] = message.text

    phone_book_bot[current_contact['name']] = current_contact

    save_contacts()
    
    bot.send_message(message.chat.id, "‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")

    current_contact = None
    phone_book_bot = load_contacts()

@bot.message_handler(commands=['search_contact'])
def search_contact_(message):
    bot.send_message(message.chat.id, "üîé –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:")
    bot.register_next_step_handler(message, process_search_contact_step)


def process_search_contact_step(message):
    contact_name = message.text
    contact_data = phone_book_bot.get(contact_name)
    if contact_data:
        surname = contact_data.get('surname', '–§–∞–º–∏–ª–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞')
        phone = contact_data.get('phone', '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω')
        email = contact_data.get('email','–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞' )
        response = f"ü™™ –ò–º—è: {contact_name}\nü™™ –§–∞–º–∏–ª–∏—è: {surname}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\nüìß –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: {email}\n\n"
    else:
        response = "ü§∑‚Äç‚ôÄÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω."
    bot.send_message(message.chat.id, response)

@bot.message_handler(commands=['delete'])
def delete_contact(message):
    bot.send_message(message.chat.id, "ü™™ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:")
    bot.register_next_step_handler(message, process_delete_step)

def process_delete_step(message):
    contact_name = message.text
    if contact_name in phone_book_bot:
        del phone_book_bot[contact_name]
        save_contacts()
        bot.send_message(message.chat.id, f"üíî –ö–æ–Ω—Ç–∞–∫—Ç {contact_name} —É–¥–∞–ª–µ–Ω.")
    else:
        bot.send_message(message.chat.id, f"ü§∑‚Äç‚ôÄÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç {contact_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

@bot.message_handler(commands=['edit'])
def edit_contact(message):
    bot.send_message(message.chat.id, "ü™™ –í–≤–µ–¥–∏ –∏–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å:")
    bot.register_next_step_handler(message, process_edit_number_step)

def process_edit_number_step(message):
    contact_name = message.text
    if contact_name in phone_book_bot:
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add('ü™™ –ò–º—è', 'ü™™ –§–∞–º–∏–ª–∏—è', 'üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'üìß –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞', '‚úãüõë –û—Ç–º–µ–Ω–∞')
        bot.send_message(message.chat.id, f"‚úçÔ∏è  –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞ {contact_name}:", reply_markup=markup)
        bot.register_next_step_handler(message, lambda msg: process_edit_choice_step(msg, contact_name))

def process_edit_choice_step(message, contact_name):
    choice = message.text.lower()
    if choice in ['ü™™ –∏–º—è', 'ü™™ —Ñ–∞–º–∏–ª–∏—è', 'üìû –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'üìß —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞']:
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è {choice} –∫–æ–Ω—Ç–∞–∫—Ç–∞:")
        bot.register_next_step_handler(message, lambda msg: process_edit_step(msg, contact_name, choice))
    elif choice == '–æ—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, "‚úãüõë –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    else:
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:ü™™ –ò–º—è, ü™™ –§–∞–º–∏–ª–∏—è,üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞,üìß –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞, –û—Ç–º–µ–Ω–∞")

def process_edit_step(message, contact_name, field):
    new_value = message.text
    contact_data = phone_book_bot[contact_name]
    if field == '–∏–º—è':
        phone_book_bot[new_value] = contact_data
        del phone_book_bot[contact_name]
    elif field == '—Ñ–∞–º–∏–ª–∏—è':
        contact_data['surname'] = new_value
    elif field == '–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞':
        contact_data['phone'] = [new_value]
    elif field == '—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞':
        contact_data['email'] = new_value

    save_contacts()
    bot.send_message(message.chat.id, f"‚úÖ {field.capitalize()} –∫–æ–Ω—Ç–∞–∫—Ç–∞ {contact_name} –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {new_value}.")
    bot.clear_step_handler_by_chat_id(message.chat.id)

@bot.message_handler(commands=['add_number_to_existing_contact'])
def add_number_to_existing_contact(message):
    bot.send_message(message.chat.id, "‚úçÔ∏è –í–≤–µ–¥–∏ –∏–º—è –∫–æ–Ω—Ç–∞–∫—Ç–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä:")
    bot.register_next_step_handler(message, process_add_number_contact_step)

def process_add_number_contact_step(message):
    contact_name = message.text
    if contact_name in phone_book_bot:
        bot.send_message(message.chat.id, "üìû –í–≤–µ–¥–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–∞:")
        bot.register_next_step_handler(message, lambda msg: process_add_number_step(msg, contact_name))
    else:
        bot.send_message(message.chat.id, "ü§∑‚Äç‚ôÄÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")

def process_add_number_step(message, contact_name):
    global phone_book_bot
    new_phone = message.text
    contact_data = phone_book_bot[contact_name]
    contact_data['phone'].append(new_phone)
    save_contacts()
    bot.send_message(message.chat.id, "‚úÖüìû –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω –∫ –∫–æ–Ω—Ç–∞–∫—Ç—É.")

phone_book_bot = load_contacts()
bot.polling()
